diff --git a/node_modules/@angular-devkit/build-angular/node_modules/@angular/build/src/tools/esbuild/application-code-bundle.js b/node_modules/@angular-devkit/build-angular/node_modules/@angular/build/src/tools/esbuild/application-code-bundle.js
index f6fb661..5e5aabb 100755
--- a/node_modules/@angular-devkit/build-angular/node_modules/@angular/build/src/tools/esbuild/application-code-bundle.js
+++ b/node_modules/@angular-devkit/build-angular/node_modules/@angular/build/src/tools/esbuild/application-code-bundle.js
@@ -121,7 +121,7 @@ function createServerPolyfillBundleOptions(options, target, sourceFileCache) {
         polyfillsFromConfig.has('@angular/localize/init')) {
         serverPolyfills.push('@angular/localize/init');
     }
-    serverPolyfills.push('@angular/platform-server/init');
+    // serverPolyfills.push('@angular/platform-server/init');
     const namespace = 'angular:polyfills-server';
     const polyfillBundleOptions = getEsBuildCommonPolyfillsOptions({
         ...options,
@@ -144,8 +144,8 @@ function createServerPolyfillBundleOptions(options, target, sourceFileCache) {
             js: [
                 // Note: Needed as esbuild does not provide require shims / proxy from ESModules.
                 // See: https://github.com/evanw/esbuild/issues/1921.
-                `import { createRequire } from 'node:module';`,
-                `globalThis['require'] ??= createRequire(import.meta.url);`,
+                // `import { createRequire } from 'node:module';`,
+                // `globalThis['require'] ??= createRequire(import.meta.url);`,
             ].join('\n'),
         },
         target,
@@ -197,15 +197,17 @@ function createServerMainCodeBundleOptions(options, target, sourceFileCache) {
     }
     // Mark manifest and polyfills file as external as these are generated by a different bundle step.
     (buildOptions.external ??= []).push(...utils_1.SERVER_GENERATED_EXTERNALS);
-    buildOptions.plugins.push((0, virtual_module_plugin_1.createVirtualModulePlugin)({
-        namespace: mainServerInjectPolyfillsNamespace,
-        cache: sourceFileCache?.loadResultCache,
-        loadContent: () => ({
-            contents: `import './polyfills.server.mjs';`,
-            loader: 'js',
-            resolveDir: workspaceRoot,
-        }),
-    }), (0, virtual_module_plugin_1.createVirtualModulePlugin)({
+    buildOptions.plugins.push(
+    //     (0, virtual_module_plugin_1.createVirtualModulePlugin)({
+    //     namespace: mainServerInjectPolyfillsNamespace,
+    //     cache: sourceFileCache?.loadResultCache,
+    //     loadContent: () => ({
+    //         contents: `import './polyfills.server.mjs';`,
+    //         loader: 'js',
+    //         resolveDir: workspaceRoot,
+    //     }),
+    // }),
+     (0, virtual_module_plugin_1.createVirtualModulePlugin)({
         namespace: mainServerInjectManifestNamespace,
         cache: sourceFileCache?.loadResultCache,
         loadContent: async () => {
